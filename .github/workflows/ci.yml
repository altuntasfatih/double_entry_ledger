name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test
  ELIXIR_VERSION: "1.18.3"
  OTP_VERSION: "27.2.4"
  TIGERBEETLE_VERSION: "0.16.60"

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Elixir and Erlang
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}
        version-type: strict
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-
    
    - name: Install TigerBeetle CLI
      run: |
        curl -Lo tigerbeetle.zip https://github.com/tigerbeetle/tigerbeetle/releases/download/${{ env.TIGERBEETLE_VERSION }}/tigerbeetle-x86_64-linux.zip
        unzip tigerbeetle.zip
        sudo mv tigerbeetle /usr/local/bin/
        chmod +x /usr/local/bin/tigerbeetle
        tigerbeetle version
    
    - name: Setup TigerBeetle test database
      run: |
        rm -f ./0_0.tigerbeetle_test
        tigerbeetle format --cluster=0 --replica=0 --replica-count=1 --development ./0_0.tigerbeetle_test
    
    - name: Start TigerBeetle in background
      run: |
        tigerbeetle start --addresses=3001 --development ./0_0.tigerbeetle_test &
        sleep 5
        # Verify TigerBeetle is running
        netstat -tuln | grep :3001 || (echo "TigerBeetle failed to start" && exit 1)
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Check formatting
      run: mix format --check-formatted
    
    - name: Compile code
      run: mix compile --warnings-as-errors
    
    - name: Run tests
      run: mix test
    
    - name: Check for unused dependencies
      run: mix deps.unlock --check-unused
    
    - name: Security audit
      run: mix deps.audit
      continue-on-error: true

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Elixir and Erlang
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}
        version-type: strict
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-lint-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-lint-
          ${{ runner.os }}-mix-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Compile for analysis
      run: MIX_ENV=dev mix compile
    
    - name: Run Credo (static analysis)
      run: mix credo --strict
    
    - name: Run Dialyzer (type checking)
      run: mix dialyzer